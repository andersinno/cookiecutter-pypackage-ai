[metadata]
name = {{ cookiecutter.project_slug_dashed }}
version = {{ cookiecutter.initial_version }}
description = {{ cookiecutter.project_short_description }}
long_description = file: README.rst
keywords = {{ cookiecutter.project_keywords }}
url = {{ cookiecutter.project_url }}
author = {{ cookiecutter.author }}
author_email = {{ cookiecutter.email }}
license = {{ cookiecutter.license }}
license_file = LICENSE
platforms = any
classifiers =
    Development Status :: 3 - Alpha
    Programming Language :: Python
{%- if cookiecutter.support_python2 == 'yes' %}
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
{%- endif %}
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Intended Audience :: Developers
{%- if cookiecutter.license == 'MIT' %}
    License :: OSI Approved :: MIT License
{%- endif %}
    Operating System :: OS Independent

[options]
include_package_data = True
packages = find:
zip_safe = False

[bdist_wheel]
universal = 1

[tool:pytest]
norecursedirs = .* build dist venv test_data
{%- if cookiecutter.is_it_django_package == 'yes' %}
DJANGO_SETTINGS_MODULE = {{cookiecutter.project_slug}}.tests.settings
{%- endif %}

[flake8]
exclude = .tox,build,dist,venv
max-line-length = 120
max-complexity = 10

[isort]
include_trailing_comma=True
known_first_party={{ cookiecutter.project_slug }}
default_section = THIRDPARTY
line_length=79
multi_line_output=3
not_skip=__init__.py
skip=.tox,build,dist,venv

[pycodestyle]
line_length = 120

[coverage:run]
branch = True
source = tests,
omit =
    *migrations*
    tests/test_*

[prequ]
annotate = yes
requirements-dev =
{%- if cookiecutter.support_python2 == 'yes' %}
    mock
{%- endif %}
    pycodestyle
    tox
requirements-test =
{%- if cookiecutter.support_python2 == 'yes' %}
    mock
{%- endif %}
    pytest
    pytest-cov
{%- if cookiecutter.is_it_django_package == 'yes' %}
    pytest-django
{%- endif %}
requirements-style =
    flake8
    flake8-isort
    flake8-print
    pep8-naming
